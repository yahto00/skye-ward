<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hydra.skye.ward.dao.CargoDao">
    <resultMap id="BaseResultMap" type="com.hydra.skye.ward.model.Cargo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="last_op_user_id" property="lastOpUserId" jdbcType="BIGINT"/>
        <result column="dozen_id" property="dozenId" jdbcType="BIGINT"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="total_area" property="totalArea" jdbcType="DOUBLE"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="CargoVoMap" type="com.hydra.skye.ward.model.vo.CargoVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="dozen_id" property="dozenId" jdbcType="BIGINT"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="total_area" property="totalArea" jdbcType="DOUBLE"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP"/>
        <result column="username" property="opUserName" jdbcType="VARCHAR"/>
        <result column="name" property="kindName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, last_op_user_id, dozen_id, count, total_area, price, create_at, update_at, status
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hydra.skye.ward.model.CargoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_cargo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tb_cargo
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="queryCargoByCondition" resultMap="CargoVoMap">
        SELECT tc.id,tc.dozen_id,tc.count,tc.total_area,tc.price,tc.create_at,tc.update_at,u.username,k.name
        FROM tb_cargo tc LEFT JOIN tb_user u ON tc.last_op_user_id = u.id
        LEFT JOIN tb_dozen td ON tc.dozen_id = td.id
        LEFT JOIN tb_kind k on td.kind_id = k.id WHERE tc.status=0
        <if test="condition.createAt != null">
            AND tc.create_at &gt;= #{condition.createAt}
        </if>
        <if test="condition.kindName != null and condition.kindName!=''">
            AND k.name LIKE concat("%",#{condition.kindName},"%")
        </if>
        <if test="condition.count != null">
            AND tc.count &gt;= #{condition.count}
        </if>
        <if test="condition.price != null">
            AND tc.price &gt;= #{condition.price}
        </if>
        ORDER BY tc.create_at DESC
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_cargo
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.hydra.skye.ward.model.CargoExample">
        delete from tb_cargo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hydra.skye.ward.model.Cargo">
    insert into tb_cargo (id, last_op_user_id, dozen_id, 
      count, total_area, price, 
      create_at, update_at, status
      )
    values (#{id,jdbcType=BIGINT}, #{lastOpUserId,jdbcType=BIGINT}, #{dozenId,jdbcType=BIGINT}, 
      #{count,jdbcType=INTEGER}, #{totalArea,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, 
      #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.hydra.skye.ward.model.Cargo"
            useGeneratedKeys="true" keyProperty="id">
        insert ignore into tb_cargo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="lastOpUserId != null">
                last_op_user_id,
            </if>
            <if test="dozenId != null">
                dozen_id,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="totalArea != null">
                total_area,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="lastOpUserId != null">
                #{lastOpUserId,jdbcType=BIGINT},
            </if>
            <if test="dozenId != null">
                #{dozenId,jdbcType=BIGINT},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="totalArea != null">
                #{totalArea,jdbcType=DOUBLE},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hydra.skye.ward.model.CargoExample" resultType="java.lang.Integer">
        select count(*) from tb_cargo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_cargo
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.lastOpUserId != null">
                last_op_user_id = #{record.lastOpUserId,jdbcType=BIGINT},
            </if>
            <if test="record.dozenId != null">
                dozen_id = #{record.dozenId,jdbcType=BIGINT},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.totalArea != null">
                total_area = #{record.totalArea,jdbcType=DOUBLE},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DOUBLE},
            </if>
            <if test="record.createAt != null">
                create_at = #{record.createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateAt != null">
                update_at = #{record.updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_cargo
        set id = #{record.id,jdbcType=BIGINT},
        last_op_user_id = #{record.lastOpUserId,jdbcType=BIGINT},
        dozen_id = #{record.dozenId,jdbcType=BIGINT},
        count = #{record.count,jdbcType=INTEGER},
        total_area = #{record.totalArea,jdbcType=DOUBLE},
        price = #{record.price,jdbcType=DOUBLE},
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hydra.skye.ward.model.Cargo">
        update tb_cargo
        <set>
            <if test="lastOpUserId != null">
                last_op_user_id = #{lastOpUserId,jdbcType=BIGINT},
            </if>
            <if test="dozenId != null">
                dozen_id = #{dozenId,jdbcType=BIGINT},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="totalArea != null">
                total_area = #{totalArea,jdbcType=DOUBLE},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="stockBack">
        UPDATE tb_cargo tc
        SET tc.total_area = tc.total_area - #{backArea,jdbcType=DOUBLE},
        tc.count = tc.count - #{backNum,jdbcType=INTEGER},
        tc.update_at = #{updateAt,jdbcType=TIMESTAMP}
        WHERE tc.id=#{cargoId,jdbcType=BIGINT}
        AND tc.total_area &gt; #{backArea,jdbcType=DOUBLE}
        AND tc.count &gt; #{backNum,jdbcType=INTEGER}
    </update>
    <update id="oldStockOut">
        UPDATE tb_cargo tc
        SET tc.total_area = tc.total_area - #{cargo.totalArea,jdbcType=DOUBLE},
        tc.count = tc.count - #{cargo.count,jdbcType=INTEGER},
        tc.update_at = #{updateAt,jdbcType=TIMESTAMP}
        WHERE tc.id = #{cargo.id,jdbcType=BIGINT}
        AND tc.total_area &gt;= #{cargo.totalArea,jdbcType=DOUBLE}
        AND tc.count &gt;= #{cargo.count,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hydra.skye.ward.model.Cargo">
    update tb_cargo
    set last_op_user_id = #{lastOpUserId,jdbcType=BIGINT},
      dozen_id = #{dozenId,jdbcType=BIGINT},
      count = #{count,jdbcType=INTEGER},
      total_area = #{totalArea,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>